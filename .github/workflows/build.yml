name: Build üõ†Ô∏è

on:
  pull_request:
    branches: [main]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.13"] # ["3.11", "3.12", "3.13"]
        os: [ubuntu-latest] # [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Cache Rust artifacts
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Format + Clippy
        run: |
          cargo fmt --all -- --check
          cargo clippy -- -D warnings --allow dead_code

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python
        run: uv python install ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt', '**/pyproject.toml', '**/setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          uv sync --all-extras --dev

      - name: Ruff
        run: uv run ruff check --select I .

      - name: Build
        run: |
          pip install maturin[patchelf]
          maturin develop --uv --release

      - name: Test
        run: |
          uv run pytest --durations=10

      - name: Benchmark
        run: |
          uv run benchmarks/book.py
          uv run benchmarks/order.py

      - name: Minimize uv cache
        run: uv cache prune --ci
